// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dev_status.proto

#ifndef PROTOBUF_dev_5fstatus_2eproto__INCLUDED
#define PROTOBUF_dev_5fstatus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace KPS {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dev_5fstatus_2eproto();
void protobuf_AssignDesc_dev_5fstatus_2eproto();
void protobuf_ShutdownFile_dev_5fstatus_2eproto();

class mp_dev_status;

// ===================================================================

class mp_dev_status : public ::google::protobuf::Message {
 public:
  mp_dev_status();
  virtual ~mp_dev_status();
  
  mp_dev_status(const mp_dev_status& from);
  
  inline mp_dev_status& operator=(const mp_dev_status& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const mp_dev_status& default_instance();
  
  void Swap(mp_dev_status* other);
  
  // implements Message ----------------------------------------------
  
  mp_dev_status* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mp_dev_status& from);
  void MergeFrom(const mp_dev_status& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // required int32 dev_id = 2;
  inline bool has_dev_id() const;
  inline void clear_dev_id();
  static const int kDevIdFieldNumber = 2;
  inline ::google::protobuf::int32 dev_id() const;
  inline void set_dev_id(::google::protobuf::int32 value);
  
  // required int32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // required int32 err_code = 4;
  inline bool has_err_code() const;
  inline void clear_err_code();
  static const int kErrCodeFieldNumber = 4;
  inline ::google::protobuf::int32 err_code() const;
  inline void set_err_code(::google::protobuf::int32 value);
  
  // required int32 cycle_ms = 5;
  inline bool has_cycle_ms() const;
  inline void clear_cycle_ms();
  static const int kCycleMsFieldNumber = 5;
  inline ::google::protobuf::int32 cycle_ms() const;
  inline void set_cycle_ms(::google::protobuf::int32 value);
  
  // required int32 run_ms = 6;
  inline bool has_run_ms() const;
  inline void clear_run_ms();
  static const int kRunMsFieldNumber = 6;
  inline ::google::protobuf::int32 run_ms() const;
  inline void set_run_ms(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:KPS.mp_dev_status)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::int32 dev_id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 err_code_;
  ::google::protobuf::int32 cycle_ms_;
  ::google::protobuf::int32 run_ms_;
  friend void  protobuf_AddDesc_dev_5fstatus_2eproto();
  friend void protobuf_AssignDesc_dev_5fstatus_2eproto();
  friend void protobuf_ShutdownFile_dev_5fstatus_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static mp_dev_status* default_instance_;
};
// ===================================================================


// ===================================================================

// mp_dev_status

// required string name = 1;
inline bool mp_dev_status::has_name() const {
  return _has_bit(0);
}
inline void mp_dev_status::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& mp_dev_status::name() const {
  return *name_;
}
inline void mp_dev_status::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void mp_dev_status::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void mp_dev_status::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* mp_dev_status::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// required int32 dev_id = 2;
inline bool mp_dev_status::has_dev_id() const {
  return _has_bit(1);
}
inline void mp_dev_status::clear_dev_id() {
  dev_id_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 mp_dev_status::dev_id() const {
  return dev_id_;
}
inline void mp_dev_status::set_dev_id(::google::protobuf::int32 value) {
  _set_bit(1);
  dev_id_ = value;
}

// required int32 status = 3;
inline bool mp_dev_status::has_status() const {
  return _has_bit(2);
}
inline void mp_dev_status::clear_status() {
  status_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 mp_dev_status::status() const {
  return status_;
}
inline void mp_dev_status::set_status(::google::protobuf::int32 value) {
  _set_bit(2);
  status_ = value;
}

// required int32 err_code = 4;
inline bool mp_dev_status::has_err_code() const {
  return _has_bit(3);
}
inline void mp_dev_status::clear_err_code() {
  err_code_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 mp_dev_status::err_code() const {
  return err_code_;
}
inline void mp_dev_status::set_err_code(::google::protobuf::int32 value) {
  _set_bit(3);
  err_code_ = value;
}

// required int32 cycle_ms = 5;
inline bool mp_dev_status::has_cycle_ms() const {
  return _has_bit(4);
}
inline void mp_dev_status::clear_cycle_ms() {
  cycle_ms_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 mp_dev_status::cycle_ms() const {
  return cycle_ms_;
}
inline void mp_dev_status::set_cycle_ms(::google::protobuf::int32 value) {
  _set_bit(4);
  cycle_ms_ = value;
}

// required int32 run_ms = 6;
inline bool mp_dev_status::has_run_ms() const {
  return _has_bit(5);
}
inline void mp_dev_status::clear_run_ms() {
  run_ms_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 mp_dev_status::run_ms() const {
  return run_ms_;
}
inline void mp_dev_status::set_run_ms(::google::protobuf::int32 value) {
  _set_bit(5);
  run_ms_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace KPS

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dev_5fstatus_2eproto__INCLUDED
